// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/metro-digital-inner-source/errorbudget-grafana-controller/grafana-controller/client/idam (interfaces: IIDAMClient)

// Package idam is a generated GoMock package.
package idam

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIIDAMClient is a mock of IIDAMClient interface.
type MockIIDAMClient struct {
	ctrl     *gomock.Controller
	recorder *MockIIDAMClientMockRecorder
}

// MockIIDAMClientMockRecorder is the mock recorder for MockIIDAMClient.
type MockIIDAMClientMockRecorder struct {
	mock *MockIIDAMClient
}

// NewMockIIDAMClient creates a new mock instance.
func NewMockIIDAMClient(ctrl *gomock.Controller) *MockIIDAMClient {
	mock := &MockIIDAMClient{ctrl: ctrl}
	mock.recorder = &MockIIDAMClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIIDAMClient) EXPECT() *MockIIDAMClientMockRecorder {
	return m.recorder
}

// Startup mocks base method.
func (m *MockIIDAMClient) Startup() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Startup")
}

// Startup indicates an expected call of Startup.
func (mr *MockIIDAMClientMockRecorder) Startup() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Startup", reflect.TypeOf((*MockIIDAMClient)(nil).Startup))
}

// TokenAuthenticator mocks base method.
func (m *MockIIDAMClient) TokenAuthenticator(arg0 string) (*StandardAndIdamClaims, bool, string) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TokenAuthenticator", arg0)
	ret0, _ := ret[0].(*StandardAndIdamClaims)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(string)
	return ret0, ret1, ret2
}

// TokenAuthenticator indicates an expected call of TokenAuthenticator.
func (mr *MockIIDAMClientMockRecorder) TokenAuthenticator(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TokenAuthenticator", reflect.TypeOf((*MockIIDAMClient)(nil).TokenAuthenticator), arg0)
}

// UpdateJWKs mocks base method.
func (m *MockIIDAMClient) UpdateJWKs() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateJWKs")
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateJWKs indicates an expected call of UpdateJWKs.
func (mr *MockIIDAMClientMockRecorder) UpdateJWKs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateJWKs", reflect.TypeOf((*MockIIDAMClient)(nil).UpdateJWKs))
}
